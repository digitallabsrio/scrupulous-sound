{
  "course_name": "Distributed Systems for Practitioners - Learn Interactively",
  "course_overview": "This course is about establishing the basic principles of distributed systems. It explains the scope of their functionality by discussing what they can and cannot achieve. It also covers the basic algorithms and protocols of distributed systems through easy-to-follow examples and diagrams that illustrate the thinking behind some design decisions and expand on how they can be practiced. This course also discusses some of the issues that might arise when doing so, eliminates confusion around some terms (e.g., consistency), and fosters thinking about trade-offs when designing distributed systems. Moreover, it provides plenty of additional resources for those who want to invest more time in gaining a deeper understanding of the theoretical aspects of distributed systems.",
  "course_folder": "distributed systems for practitioners",
  "course_lessons": [
    "0-introduction",
    "1-getting started",
    "2-fallacies of distributed computing",
    "3-difficulties designing distributed systems",
    "4-measures of correctness in distributed systems",
    "5-system models",
    "6-types of failures",
    "7-the tale of exactly once semantics",
    "8-failure in the world of distributed systems",
    "9-stateless and stateful systems",
    "10-quiz",
    "11-partitioning",
    "12-algorithms for horizontal partitioning",
    "13-replication",
    "14-single master replication algorithm",
    "15-multi master replication algorithm",
    "16-quorums in distributed systems",
    "17-safety guarantees in distributed systems",
    "18-acid transactions",
    "19-the cap theorem",
    "20-consistency models",
    "21-cap theorem s consistency model",
    "22-isolation levels and anomalies",
    "23-prevention of anomalies in isolation levels",
    "24-consistency and isolation",
    "25-hierarchy of models",
    "26-why all the formalities",
    "27-quiz",
    "28-introduction to distributed transactions",
    "29-quiz",
    "30-achieving serializability",
    "31-pessimistic concurrency control pcc",
    "32-optimistic concurrency control occ",
    "33-achieving snapshot isolation",
    "34-achieving full serializable snapshot isolation",
    "35-quiz",
    "36-hard to guarantee atomicity",
    "37-2 phase commit 2pc",
    "38-3 phase commit 3pc",
    "39-quorum based commit protocol",
    "40-quiz",
    "41-how it all fits together",
    "42-long lived transactions and sagas",
    "43-defining the consensus problem",
    "44-flp impossibility",
    "45-the paxos algorithm",
    "46-intricacies of paxos",
    "47-paxos in real life",
    "48-replicated state machine via consensus",
    "49-distributed transactions via consensus",
    "50-an introduction to raft",
    "51-communication among raft nodes",
    "52-raft s implementation",
    "53-standing on the shoulders of giants",
    "54-quiz",
    "55-what is different in a distributed system",
    "56-a practical perspective",
    "57-a theoretical perspective",
    "58-logical clocks",
    "59-quiz",
    "60-total and partial ordering",
    "61-the concept of causality",
    "62-lamport clocks",
    "63-vector clocks",
    "64-version vectors",
    "65-dotted version vectors",
    "66-distributed snapshot problem",
    "67-solving the distributed snapshot problem",
    "68-physical and logical time closing thoughts",
    "69-quiz",
    "70-introduction",
    "71-the physical layer",
    "72-the link layer services",
    "73-the link layer protocols",
    "74-the network layer",
    "75-the transport layer",
    "76-the application layer",
    "77-taking a step back",
    "78-quiz",
    "79-introduction",
    "80-authentication",
    "81-confidentiality",
    "82-integrity",
    "83-a cryptography primer",
    "84-symmetric asymmetric encryption and digital signatures",
    "85-quiz",
    "86-transport layer security tls",
    "87-public key infrastructure pki",
    "88-web of trust pgp",
    "89-oauth protocol",
    "90-quiz",
    "91-introduction",
    "92-hadoop distributed file system and google file system",
    "93-creating and reading files",
    "94-writing and deleting files",
    "95-gfs consistency model",
    "96-quiz",
    "97-coordination service",
    "98-zookeeper",
    "99-guarantees provided by zookeeper",
    "100-zookeeper s zab protocol",
    "101-examples of powerful primitives by zookeepers api",
    "102-quiz",
    "103-introduction",
    "104-bigtable hbase architecture",
    "105-appends and read operations in hbase",
    "106-guarantees provided by hbase",
    "107-cassandra s data model",
    "108-cassandra s cluster internode communication",
    "109-cassandra s consistency levels",
    "110-linearizability violations in cassandra",
    "111-linearizability guarantees by cassandra",
    "112-cassandra performing queries efficiently",
    "113-spanner s data model",
    "114-spanner s architecture",
    "115-spanner using truetime",
    "116-spanner operations",
    "117-faunadb",
    "118-quiz",
    "119-introduction to kafka",
    "120-kafka levers",
    "121-kafka s messaging guarantees",
    "122-transactions storage layout and other guarantees",
    "123-quiz",
    "124-kubernetes",
    "125-components of master and worker nodes",
    "126-quiz",
    "127-introduction to corda",
    "128-corda s data model",
    "129-corda s architecture",
    "130-backwards compatibility provided by corda",
    "131-quiz",
    "132-introduction",
    "133-introduction to mapreduce",
    "134-mapreduce s master worker architecture",
    "135-introduction to apache spark",
    "136-dag of stages in apache spark",
    "137-perks of apache spark",
    "138-apache flink",
    "139-time and watermarks in flink",
    "140-failure recovery in flink",
    "141-quiz",
    "142-introduction",
    "143-creating and parsing data",
    "144-transfer of data",
    "145-datastores for asynchronous communication",
    "146-communication models",
    "147-coordination patterns",
    "148-data synchronisation",
    "149-event sourcing",
    "150-change data capture cdc",
    "151-sharing problems and their solution",
    "152-benefits and drawbacks",
    "153-leases in distributed systems",
    "154-preventing safety risks in leases",
    "155-backwards compatibility",
    "156-maintaining backwards compatibility",
    "157-failure handling techniques",
    "158-applying failure handling techniques",
    "159-retries",
    "160-containing impact of failure",
    "161-backpressure",
    "162-reacting to backpressure",
    "163-recording program s execution",
    "164-recap of the course",
    "165-some more things to discover"
  ],
  "repo_name": "scrupulous-sound"
}
